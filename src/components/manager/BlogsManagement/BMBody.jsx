import { useState } from "react";
import { useNavigate } from "react-router-dom";
import "./BMBody.css";

const posts = [
  { id: 1, title: "10 m·∫πo gi·ªØ g√¨n s·ª©c kh·ªèe tim m·∫°ch", author: "BS. Nguy·ªÖn VƒÉn A", topic: "Tim m·∫°ch", status: "Ch·ªù x√°c nh·∫≠n", date: "2024-06-01" },
  { id: 2, title: "Ch·∫ø ƒë·ªô ƒÉn u·ªëng l√†nh m·∫°nh cho ng∆∞·ªùi ti·ªÉu ƒë∆∞·ªùng", author: "BS. Tr·∫ßn Th·ªã B", topic: "Dinh d∆∞·ª°ng", status: "ƒê√£ x√°c nh·∫≠n", date: "2024-05-28" },
  { id: 3, title: "T·∫ßm quan tr·ªçng c·ªßa vi·ªác x√©t nghi·ªám ƒë·ªãnh k·ª≥", author: "BS. L√™ VƒÉn C", topic: "X√©t nghi·ªám", status: "Ch·ªù x√°c nh·∫≠n", date: "" },
  { id: 4, title: "Ph√≤ng ng·ª´a b·ªánh c·∫£m c√∫m m√πa ƒë√¥ng", author: "BS. Ph·∫°m Th·ªã D", topic: "Ph√≤ng ng·ª´a", status: "ƒê√£ x√°c nh·∫≠n", date: "2024-06-10" },
  { id: 5, title: "T√°c h·∫°i c·ªßa stress ƒë·∫øn s·ª©c kh·ªèe", author: "BS. Ho√†ng VƒÉn E", topic: "T√¢m l√Ω", status: "ƒê√£ x√°c nh·∫≠n", date: "2024-05-25" },
  { id: 6, title: "L√†m sao ƒë·ªÉ ng·ªß ngon m·ªói ƒë√™m", author: "BS. Nguy·ªÖn VƒÉn F", topic: "Gi·∫•c ng·ªß", status: "Ch·ªù x√°c nh·∫≠n", date: "2024-06-03" },
];

const getStatusClass = (status) => {
  switch (status) {
    case "ƒê√£ x√°c nh·∫≠n":
      return "badge green";
    case "ƒê√£ t·ª´ ch·ªëi":
      return "badge red";
    case "Ch·ªù x√°c nh·∫≠n":
      return "badge gray";
    default:
      return "badge";
  }
};

const BMBody = ({ searchKeyword, statusFilter, topicFilter }) => {
  const navigate = useNavigate();
  const itemsPerPage = 3;
  const [page, setPage] = useState(1);

  // L·ªçc d·ªØ li·ªáu theo t·ª´ kh√≥a, tr·∫°ng th√°i, ch·ªß ƒë·ªÅ
  const filteredPosts = posts.filter(post => {
    const matchKeyword = post.title.toLowerCase().includes(searchKeyword.toLowerCase());
    const matchStatus = statusFilter ? post.status === statusFilter : true;
    const matchTopic = topicFilter ? post.topic === topicFilter : true;
    return matchKeyword && matchStatus && matchTopic;
  });

  const totalPages = Math.ceil(filteredPosts.length / itemsPerPage);
  const visiblePosts = filteredPosts.slice((page - 1) * itemsPerPage, page * itemsPerPage);

  const handleView = (post) => {
    navigate(`/manager/blogs/${post.id}`);
  };

  const handleDelete = (post) => {
    if (window.confirm(`‚ùå B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a "${post.title}"?`)) {
      alert(`üóëÔ∏è ƒê√£ x√≥a: ${post.title}`);
    }
  };

  return (
    <div className="blog-table-container">
      <h2>Danh s√°ch b√†i vi·∫øt ({filteredPosts.length})</h2>
      <table className="blog-table">
        <thead>
          <tr>
            <th>B√ÄI VI·∫æT</th>
            <th>T√ÅC GI·∫¢</th>
            <th>CH·ª¶ ƒê·ªÄ</th>
            <th>TR·∫†NG TH√ÅI</th>
            <th>NG√ÄY ƒêƒÇNG</th>
            <th>THAO T√ÅC</th>
          </tr>
        </thead>
        <tbody>
          {visiblePosts.map((post) => (
            <tr key={post.id}>
              <td>
                <strong>{post.title}</strong>
                <div className="post-meta">ID: {post.id}</div>
              </td>
              <td>{post.author}</td>
              <td><span className="badge gray">{post.topic}</span></td>
              <td><span className={getStatusClass(post.status)}>{post.status}</span></td>
              <td>{post.date || "Ch∆∞a l√™n l·ªãch"}</td>
              <td>
                <div className="actions">
                  <button className="view-btn" onClick={() => handleView(post)}>Xem</button>
                  <button className="delete-btn" onClick={() => handleDelete(post)}>X√≥a</button>
                </div>
              </td>
            </tr>
          ))}
        </tbody>
      </table>

      <div className="pagination">
        <button onClick={() => setPage(page - 1)} disabled={page === 1}>‚Äπ Tr∆∞·ªõc</button>
        {[...Array(totalPages)].map((_, idx) => {
          const p = idx + 1;
          return (
            <button
              key={p}
              className={page === p ? "active" : ""}
              onClick={() => setPage(p)}
            >
              {p}
            </button>
          );
        })}
        <button onClick={() => setPage(page + 1)} disabled={page === totalPages}>Sau ‚Ä∫</button>
      </div>
    </div>
  );
};

export default BMBody;
