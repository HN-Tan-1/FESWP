import { useParams, useNavigate } from "react-router-dom";
import { useEffect, useState } from "react";
import axios from "axios";
import { useAuth } from "../../../context/AuthContext"; // ‚úÖ IMPORT AuthContext
import "./BlogDetail.css";

const BlogDetail = () => {
  const { id } = useParams();
  const navigate = useNavigate();
  const [post, setPost] = useState(null);
  const [loading, setLoading] = useState(true);

  const { user } = useAuth(); // ‚úÖ L·∫§Y user T·ª™ CONTEXT
  const token = user?.token;  // ‚úÖ TOKEN LU√îN ƒê√öNG

  useEffect(() => {
    if (!token) {
      console.warn("üö´ Kh√¥ng c√≥ token, ch·∫∑n g·ªçi API!");
      return;
    }

    axios
      .get(`http://localhost:8080/api/management/blogs/${id}`, {
        headers: {
          Authorization: `Bearer ${token}`,
        },
      })
      .then((res) => {
        setPost(res.data);
      })
      .catch((err) => {
        console.error("‚ùå Kh√¥ng l·∫•y ƒë∆∞·ª£c b√†i vi·∫øt:", err);
        setPost(null);
      })
      .finally(() => setLoading(false));
  }, [id, token]);

  const updateStatus = (newStatus) => {
    const endpoint =
      newStatus === "ƒê√£ x√°c nh·∫≠n"
        ? `/api/management/blogs/${id}/approve`
        : `/api/management/blogs/${id}/reject`;

    axios
      .put(`http://localhost:8080${endpoint}`, null, {
        headers: {
          Authorization: `Bearer ${token}`,
        },
      })
      .then(() => {
        alert(`‚úÖ ƒê√£ c·∫≠p nh·∫≠t tr·∫°ng th√°i: ${newStatus}`);
        navigate(-1);
      })
      .catch((err) => {
        console.error("‚ùå L·ªói c·∫≠p nh·∫≠t tr·∫°ng th√°i:", err);
        alert("Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t tr·∫°ng th√°i!");
      });
  };

  if (loading) return <div className="blog-detail-wrapper">‚è≥ ƒêang t·∫£i...</div>;
  if (!post)
    return <div className="blog-detail-wrapper">‚ùå Kh√¥ng t√¨m th·∫•y b√†i vi·∫øt.</div>;

  const normalizedStatus = post.status?.toLowerCase().trim();
  const showActions =
    normalizedStatus === "ch·ªù x√°c nh·∫≠n" || normalizedStatus === "pending";

  return (
    <div className="blog-detail-wrapper">
      <div className="blog-detail-header">
        <div className="blog-detail-left">
          <button className="blog-detail-btn" onClick={() => navigate(-1)}>
            Quay l·∫°i
          </button>
        </div>

        {showActions && (
          <div className="blog-detail-actions">
            <button
              className="blog-detail-btn green"
              onClick={() => updateStatus("ƒê√£ x√°c nh·∫≠n")}
            >
              X√°c nh·∫≠n
            </button>
            <button
              className="blog-detail-btn red"
              onClick={() => updateStatus("ƒê√£ t·ª´ ch·ªëi")}
            >
              T·ª´ ch·ªëi
            </button>
          </div>
        )}
      </div>

      <h1 className="blog-detail-title">{post.title}</h1>
      <div className="blog-detail-meta">
        <p>
          <strong>T√°c gi·∫£:</strong> {post.authorName}
        </p>
        <p>
          <strong>Ch·ªß ƒë·ªÅ:</strong> {post.topicName}
        </p>
        <p>
          <strong>Tr·∫°ng th√°i:</strong> {post.status}
        </p>
        <p>
          <strong>Ng√†y ƒëƒÉng:</strong>{" "}
          {post.createdAt
            ? new Date(post.createdAt).toLocaleDateString()
            : "Ch∆∞a l√™n l·ªãch"}
        </p>
      </div>
      <hr />
      <div className="blog-detail-content">{post.content}</div>
    </div>
  );
};

export default BlogDetail;
